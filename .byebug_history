c
game
c
game
n
game
exit
game.remaining_lives
game.initial_number_of_lives
game.initial_number_of_lives = 6
game.initial_number_of_lives
game.remaining_lives
game
game = Game.create(:name => "lilly")
helper.game_progress(game)
game_progress
helper.game_progress
game
c
flash
c
flash
flashj
n
flash
c
flashj
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
flash
c
n
flash
n
flash[:notice]
flash
n
flash
c
flash
game.guesses.error
game.guesses.errors
guess.errors
guess
c
flash[:notice]
flash
n
flash
c
game.guesses.last.count
game.guesses.last
guess
game.guesses.count
game.guesses
game
c
C
flash
c
game.guesses
game
c
exit
exity
Game.all
c
n
build_game
n
Game.count
c
game
:game.id
:game.if
game.id
id
Game.id
game
:call
name
build_game
Game.count
Game.all
Game
game
call
game_params
game_paranms
BuildGame
c
assigns(:game).id
Game.all
c
Game.all
c
text.scrub.split
text.scrub
text.encode('UTF-8').split
text.to_s.split
text.to_s
text.split
text
c
params
c
params
c
n
c
n
guesses
c
n
c
@guess.errors.full_messages
@guess.erros.full_messages
c
@guess.errors.full_messages
@guess.errors
@guess
q
c
@guess
n
params
c
params
q
c
g
c
g
c
g
c
n
@game.guesses
n
Game.find(20).guesses
Game.find(20)
Game.find(15)
Game.find(16)
Game.find(17)
Game.find(14)
Game.find(14
Game.find(13)
Game.find(19)
Game.id
Game
n
c
Game.find(18).guesses
Game.find(18)
game.find(18)
c
n
@game
game
